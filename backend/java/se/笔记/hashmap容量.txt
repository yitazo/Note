默认16个桶，装填因子0.75，扩容倍数为2，初始化时将容量定义为要容纳的 (元素数/0.75) + 1.1 可以避免再哈希(扩容)，也能降低哈希碰撞的概率

为什么加1.1而不是1，hashmap初始化容量一定是2的n次幂，如果你写17它会当作32是初始容量，知道这个后再来看，如果你要装的元素个数是12个，那么你 12/0.75 + 1 结果可能是不精确的浮点数，有可能结果是16.999999... ，hashmap构造函数接收的数会强转成整数，这样初始容量就会变成16，而当12个元素都装进去时，刚好16 * 0.75 = 12，此时会进行扩容，但如果加1.1，即使12/0.75由于浮点数不精确得到15.99999...，加1.1之后也会变成17.09999...，接收之后变成17，会自动转变成32，这样12个元素填满后也不会进行再哈希

当然这是极度耗费内存的，不过在内存足够（一般都会足够）的情况下，这样可以避免再哈希耗费的时间，而且降低哈希碰撞后查找时间也能稍快一点

如果不进行初始化容量确定，要装1024个元素时，hashmap就会进行整整7次再哈希，相当于重复新建7个2倍原来容量的hashmap，再将原来的hashmap里元素装填进新的hashmap里，这个过程很耗时